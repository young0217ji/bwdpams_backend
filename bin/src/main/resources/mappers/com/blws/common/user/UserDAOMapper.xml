<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blws.domain.common.user.dao.UserDAO">
  <select id="selectUserById"
    parameterType="com.blws.domain.common.user.entity.UserEntity"
    resultType="com.blws.domain.common.user.entity.UserEntity">
    SELECT SU.userid
         , SU.password
         , SU.username AS name
         , SU.email
         , SU.phone_number
<!--         , created_by
         , created_date
         , last_modified_by
         , last_modified_date
         , is_deleted
         , deleted_by
         , deleted_date-->
         , ISNULL(STUFF((SELECT ',' + SR.ROLEID
                   FROM SF_ROLEUSERMAP SR, SF_ROLE R 
                  WHERE SR.USERID = SU.USERID 
                    AND SR.USEFLAG = 'Yes'
                    AND SR.PLANTID = R.PLANTID
                    AND SR.ROLEID = R.ROLEID
                    AND R.ROLETYPE = 'MENU'
                    FOR XML PATH('')
                  ), 1, 1, ''), 'Guest') AS role_id
    FROM sf_user SU
    WHERE SU.userid = #{userId}
  </select>
  
  <select id="selectUserByIds"
    parameterType="com.blws.domain.common.user.entity.UserEntity"
    resultType="com.blws.domain.common.user.entity.UserEntity">
    SELECT SU.userid
         , SU.password
         , SU.username AS name
         , SU.email
         , SU.phone_number
<!--         , created_by
         , created_date
         , last_modified_by
         , last_modified_date
         , is_deleted
         , deleted_by
         , deleted_date-->
         , ISNULL(STUFF((SELECT ',' + SR.ROLEID
                   FROM SF_ROLEUSERMAP SR, SF_ROLE R 
                  WHERE SR.USERID = SU.USERID 
                    AND SR.USEFLAG = 'Yes'
                    AND SR.PLANTID = R.PLANTID
                    AND SR.ROLEID = R.ROLEID
                    AND R.ROLETYPE = 'MENU'
                    FOR XML PATH('')
                  ), 1, 1, ''), 'Guest') AS role_id
    FROM sf_user SU
    WHERE
        <foreach collection="list" item="item" separator="OR">
           SU.userid = #{item.userId}
        </foreach>
  </select>
  
  <select id="selectUserByUserId"
    parameterType="com.blws.domain.common.user.entity.UserEntity"
    resultType="com.blws.domain.common.user.entity.UserEntity">
    SELECT DISTINCT SU.userid
         , SU.password
         , SU.username AS name
         , SU.email
         , SU.phone_number
<!--         , created_by
         , created_date
         , last_modified_by
         , last_modified_date
         , is_deleted
         , deleted_by
         , deleted_date-->
         , SU.access_token
         , SU.refresh_token
         , SRU.PLANTID
         , ISNULL(STUFF((SELECT ',' + SR.ROLEID
                   FROM SF_ROLEUSERMAP SR, SF_ROLE R
                  WHERE SR.USERID = SU.USERID
                    AND SR.USEFLAG = 'Yes'
                    AND SR.PLANTID = R.PLANTID
                    AND SR.ROLEID = R.ROLEID
                    AND R.ROLETYPE = 'MENU'
                    FOR XML PATH('')
                  ), 1, 1, ''), 'Guest') AS role_id
    FROM sf_user SU INNER JOIN SF_ROLEUSERMAP SRU on SU.USERID = SRU.USERID
    WHERE SU.userid = #{userId}
  </select>

  <select id="selectAll"
    resultType="com.blws.domain.common.user.entity.UserEntity">
    SELECT SU.userid
         , SU.password
         , SU.username AS name
         , SU.email
         , SU.phone_number
<!--         , created_by
         , created_date
         , last_modified_by
         , last_modified_date
         , is_deleted
         , deleted_by
         , deleted_date-->
         , ISNULL(STUFF((SELECT ',' + SR.ROLEID
                   FROM SF_ROLEUSERMAP SR, SF_ROLE R 
                  WHERE SR.USERID = SU.USERID 
                    AND SR.USEFLAG = 'Yes'
                    AND SR.PLANTID = R.PLANTID
                    AND SR.ROLEID = R.ROLEID
                    AND R.ROLETYPE = 'MENU'
                    FOR XML PATH('')
                  ), 1, 1, ''), 'Guest') AS role_id
    FROM sf_user SU
  </select>
  
  <select id="selectUserByConditions"
    parameterType="com.blws.domain.common.user.entity.UserEntity"
    resultType="com.blws.domain.common.user.entity.UserEntity">
    SELECT SU.userid
         , SU.password
         , SU.username AS name
         , SU.email
         , SU.phone_number
<!--         , created_by
         , created_date
         , last_modified_by
         , last_modified_date
         , is_deleted
         , deleted_by
         , deleted_date-->
         , ISNULL(STUFF((SELECT ',' + SR.ROLEID
                   FROM SF_ROLEUSERMAP SR, SF_ROLE R 
                  WHERE SR.USERID = SU.USERID 
                    AND SR.USEFLAG = 'Yes'
                    AND SR.PLANTID = R.PLANTID
                    AND SR.ROLEID = R.ROLEID
                    AND R.ROLETYPE = 'MENU'
                    FOR XML PATH('')
                  ), 1, 1, ''), 'Guest') AS role_id
    FROM sf_user SU
    WHERE SU.useflag = 'Yes'
    <if test="userId != null and userId != ''">
       AND SU.userid LIKE CONCAT('%', #{userId}, '%')
    </if>
    <if test="name != null and name != ''">
       AND SU.username LIKE CONCAT('%', #{name}, '%')
    </if>
  </select>

<!--  <insert id="insertUserList"
    parameterType="com.blws.domain.common.user.entity.UserEntity">
    INSERT INTO sf_user
    ( user_id
    , password
    , name
    , email
    , phone_number
    , created_by
    , created_date
    , last_modified_by
    , last_modified_date
    , role_id)
    VALUES 
    <foreach item="item" collection="list" separator=",">
    ( #{item.userId}
    , #{item.password}
    , #{item.name}
    , #{item.email}
    , #{item.phoneNumber}
    , #{item.createdBy}
    , #{item.createdDate}
    , #{item.lastModifiedBy}
    , #{item.lastModifiedDate}
    , #{item.roleId})
    </foreach>
  </insert>

  <insert id="insertUserWithId"
    parameterType="com.blws.domain.common.user.entity.UserEntity">
    INSERT INTO sf_user
    ( id
    , user_id
    , password
    , name
    , email
    , phone_number
    , created_by
    , created_date
    , last_modified_by
    , last_modified_date
    , role_id)
    VALUES 
    <foreach item="item" collection="list" separator=",">
    ( #{item.id}
    , #{item.userId}
    , #{item.password}
    , #{item.name}
    , #{item.email}
    , #{item.phoneNumber}
    , #{item.createdBy}
    , #{item.createdDate}
    , #{item.lastModifiedBy}
    , #{item.lastModifiedDate}
    , #{item.roleId})
    </foreach>
  </insert>

  <update id="updateUserById"
    parameterType="com.blws.domain.common.user.entity.UserEntity">
    <foreach item="item" collection="list" separator=";">
    UPDATE sf_user
    SET user_id            = #{item.userId}
    <if test="item.password != null and item.password != ''">
      , password           = #{item.password}
    </if>
      , name               = #{item.name}
      , email              = #{item.email}
      , phone_number       = #{item.phoneNumber}
      , last_modified_by   = #{item.lastModifiedBy}
      , last_modified_date = #{item.lastModifiedDate}
      , role_id            = #{item.roleId}
    WHERE id = #{item.id}
    </foreach>
  </update>

  <update id="updateUserIsDeletedById"
    parameterType="com.blws.domain.common.user.entity.UserEntity">
    <foreach item="item" collection="list" separator=";">
    UPDATE sf_user
    SET is_deleted         = #{item.isDeleted}
      , deleted_by         = #{item.deletedBy}
      , deleted_date       = #{item.deletedDate}
      , last_modified_by   = #{item.lastModifiedBy}
      , last_modified_date = #{item.lastModifiedDate}
      , role_id            = #{item.roleId}
    WHERE id = #{item.id}
    </foreach>
  </update>-->

    <update id="updateUserToken"
            parameterType="com.blws.domain.common.user.entity.UserEntity">
        UPDATE sf_user
        SET access_token     = #{accessToken}
          , refresh_token    = #{refreshToken}
        WHERE userid = #{userId}
    </update>
</mapper>